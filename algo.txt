1.Initialize Application
- Create a Task class with attributes: name, priority, due date, and completed.
- Define a ToDoApp class that initializes the graphical user interface with tkinter.
-  Create input fields, buttons, and a listbox for task management.
2. Add a Task
- Retrieve input values from the task name, priority, and due date fields.
- Check values to make sure all fields are filled
- Create a new task object with the input.
- Append the task to the task list.
- Update the task display in the listbox.
- Clear the input fields.
3. Mark a Task as Completed
- Get the index of the selected task in the listbox.
- Update task for completed as true.
- If no task is selected show warning.
- Refresh task list.
4. Delete a Task
- Get the index of selected task.
- If a task is selected remove the task from the task list.
- If no task is selected show a warning.
- Refresh the task list in the listbox.
5. Update Task Display
- Clear listbox.
- Iterate through the list of tasks.
- Format each task into a readable string.
- Include "Completed" for completed tasks.
6. Clear Inputs
- Clear the text in all inputs
7. User Interaction
- When the user interacts with the buttons call the function

